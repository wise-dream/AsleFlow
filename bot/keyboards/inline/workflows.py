from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from bot.models.models import UserWorkflow

def get_workflows_keyboard(i18n: dict, workflows: list[UserWorkflow]) -> InlineKeyboardMarkup:
    keyboard = []

    for wf in workflows:
        status = wf.status.upper()
        button = InlineKeyboardButton(
            text=f"{wf.name} ({status})",
            callback_data=f"workflow:view:{wf.id}"
        )
        keyboard.append([button])

    keyboard.append([
        InlineKeyboardButton(
            text=i18n.get("workflow.button.add", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"),
            callback_data="workflow:add"
        )
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_account_selection_keyboard(accounts) -> InlineKeyboardBuilder:
    kb = InlineKeyboardBuilder()
    for acc in accounts:
        text = f"{acc.channel_name or '-'} ({acc.platform.upper()})"
        kb.button(
            text=text,
            callback_data=f"workflow:account:{acc.id}"
        )
    kb.adjust(1)
    return kb.as_markup()


def get_theme_selection_keyboard(i18n) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º–∞—Ç–∏–∫–∏
    kb.button(text=i18n.get("workflow.theme.finance"), callback_data="theme:—Ñ–∏–Ω–∞–Ω—Å—ã")
    kb.button(text=i18n.get("workflow.theme.marketing"), callback_data="theme:–º–∞—Ä–∫–µ—Ç–∏–Ω–≥")
    kb.button(text=i18n.get("workflow.theme.tech"), callback_data="theme:—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
    kb.button(text=i18n.get("workflow.theme.psychology"), callback_data="theme:–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è")
    kb.button(text=i18n.get("workflow.theme.health"), callback_data="theme:–∑–¥–æ—Ä–æ–≤—å–µ")
    kb.button(text=i18n.get("workflow.theme.education"), callback_data="theme:–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ")
    kb.button(text=i18n.get("workflow.theme.sports"), callback_data="theme:—Å–ø–æ—Ä—Ç")
    kb.button(text=i18n.get("workflow.theme.travel"), callback_data="theme:–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è")
    kb.button(text=i18n.get("workflow.theme.food"), callback_data="theme:–µ–¥–∞")
    kb.button(text=i18n.get("workflow.theme.fashion"), callback_data="theme:–º–æ–¥–∞")
    kb.button(text=i18n.get("workflow.theme.entertainment"), callback_data="theme:—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è")
    kb.button(text=i18n.get("workflow.theme.business"), callback_data="theme:–±–∏–∑–Ω–µ—Å")
    kb.button(text=i18n.get("workflow.theme.lifestyle"), callback_data="theme:–æ–±—Ä–∞–∑_–∂–∏–∑–Ω–∏")
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å–≤–æ–µ–π —Ç–µ–º–∞—Ç–∏–∫–∏
    kb.button(text=i18n.get("workflow.theme.custom"), callback_data="theme:custom")
    kb.adjust(3)
    return kb.as_markup()


def get_media_type_keyboard(i18n) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text=i18n.get("workflow.media.text"), callback_data="media:text")
    kb.button(text=i18n.get("workflow.media.image"), callback_data="media:image")
    kb.button(text=i18n.get("workflow.media.video"), callback_data="media:video")
    kb.adjust(3)
    return kb.as_markup()


def get_language_selection_keyboard(i18n) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π", callback_data="lang:ru")
    kb.button(text="üá¨üáß English", callback_data="lang:en")
    kb.adjust(2)
    return kb.as_markup()

def get_style_selection_keyboard(i18n) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text=i18n.get("workflow.style.formal"), callback_data="style:formal")
    kb.button(text=i18n.get("workflow.style.friendly"), callback_data="style:friendly")
    kb.button(text=i18n.get("workflow.style.humorous"), callback_data="style:humorous")
    kb.adjust(1)
    return kb.as_markup()

def get_time_selection_keyboard() -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    # –ö–Ω–æ–ø–∫–∞ "–°–µ–π—á–∞—Å"
    kb.button(text="üöÄ –°–µ–π—á–∞—Å", callback_data="time:now")
    for hour in range(0, 24):  # —Ç–µ–ø–µ—Ä—å –¥–æ 23:30 –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
        kb.button(text=f"{hour:02d}:00", callback_data=f"time:{hour:02d}:00")
        kb.button(text=f"{hour:02d}:30", callback_data=f"time:{hour:02d}:30")
    kb.adjust(2)
    return kb.as_markup()

def get_style_selection_keyboard(i18n) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text=i18n.get("workflow.style.formal"), callback_data="style:formal")
    kb.button(text=i18n.get("workflow.style.informal"), callback_data="style:informal")
    kb.button(text=i18n.get("workflow.style.friendly"), callback_data="style:friendly")
    kb.adjust(1)
    return kb.as_markup()

def get_edit_workflow_keyboard(
    workflow_id: int,
    i18n: dict,
    moderation_enabled: bool = True,
    is_active: bool = True
) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()


    moderation_text = (
        i18n.get("workflow.edit.moderation_on", "‚úÖ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞")
        if moderation_enabled else
        i18n.get("workflow.edit.moderation_off", "üö´ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞")
    )
    kb.button(
        text=moderation_text,
        callback_data=f"workflow:edit:moderation:{workflow_id}"
    )

    status_text = (
        i18n.get("workflow.edit.active", "üü¢ –ó–∞–¥–∞—á–∞ –≤–∫–ª—é—á–µ–Ω–∞")
        if is_active else
        i18n.get("workflow.edit.inactive", "‚ö™Ô∏è –ó–∞–¥–∞—á–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞")
    )
    status_text = status_text.upper()  # –≤—Å–µ–≥–¥–∞ –∫–∞–ø—Å–æ–º
    kb.button(
        text=status_text,
        callback_data=f"workflow:edit:toggle:{workflow_id}"
    )

    kb.button(
        text=i18n.get("workflow.edit.name", "‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ"),
        callback_data=f"workflow:edit:name:{workflow_id}"
    )
    kb.button(
        text=i18n.get("workflow.edit.theme", "üéØ –¢–µ–º–∞"),
        callback_data=f"workflow:edit:theme:{workflow_id}"
    )
    kb.button(
        text=i18n.get("workflow.edit.time", "‚è∞ –í—Ä–µ–º—è"),
        callback_data=f"workflow:edit:time:{workflow_id}"
    )
    kb.button(
        text=i18n.get("workflow.edit.interval", "‚è±Ô∏è –ò–Ω—Ç–µ—Ä–≤–∞–ª"),
        callback_data=f"workflow:edit:interval:{workflow_id}"
    )
    kb.button(
        text=i18n.get("workflow.edit.language", "üåç –Ø–∑—ã–∫"),
        callback_data=f"workflow:edit:lang:{workflow_id}"
    )
    kb.button(
        text=i18n.get("workflow.edit.style", "üìù –°—Ç–∏–ª—å"),
        callback_data=f"workflow:edit:style:{workflow_id}"
    )

    kb.button(
        text=i18n.get("common.back", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
        callback_data="workflows:back"
    )

    # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
    kb.button(
        text=i18n.get("workflow.edit.delete", "üóë –£–¥–∞–ª–∏—Ç—å"),
        callback_data=f"workflow:delete:{workflow_id}"
    )


    kb.adjust(2)
    return kb.as_markup()

def get_moderation_keyboard(i18n: dict) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    kb.button(text=i18n.get("workflow.moderation.on", "‚úÖ –° –º–æ–¥–µ—Ä–∞—Ü–∏–µ–π"), callback_data="moderation:on")
    kb.button(text=i18n.get("workflow.moderation.off", "üö´ –ë–µ–∑ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"), callback_data="moderation:off")
    kb.adjust(1)
    return kb.as_markup()


def get_content_length_keyboard(i18n: dict) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–ª–∏–Ω—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    kb = InlineKeyboardBuilder()
    
    # –ö–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç (–¥–æ 50 —Å–ª–æ–≤)
    kb.button(
        text=i18n.get("workflow.length.short", "üìù –ö–æ—Ä–æ—Ç–∫–∏–π (–¥–æ 50 —Å–ª–æ–≤)"), 
        callback_data="length:short"
    )
    
    # –°—Ä–µ–¥–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç (–¥–æ 100 —Å–ª–æ–≤)  
    kb.button(
        text=i18n.get("workflow.length.medium", "üìÑ –°—Ä–µ–¥–Ω–∏–π (–¥–æ 100 —Å–ª–æ–≤)"),
        callback_data="length:medium"
    )
    
    # –ë–æ–ª—å—à–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç (100+ —Å–ª–æ–≤)
    kb.button(
        text=i18n.get("workflow.length.long", "üìñ –ë–æ–ª—å—à–æ–π (100+ —Å–ª–æ–≤)"),
        callback_data="length:long"
    )
    
    kb.adjust(1)
    return kb.as_markup()

def get_interval_keyboard(i18n: dict) -> InlineKeyboardMarkup:
    kb = InlineKeyboardBuilder()
    # –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã —Å —É—á–µ—Ç–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è 4-168 —á–∞—Å–æ–≤
    intervals = [4, 8, 12, 16, 20, 24, 36, 48]
    
    for interval in intervals:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á–∞—Å—ã —Å –ø–æ–¥–ø–∏—Å—å—é 
        hours_text = f"{interval}—á" if i18n.get("language") == "ru" else f"{interval}h"
        kb.button(text=hours_text, callback_data=f"interval:{interval}")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å–≤–æ–µ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
    kb.button(text=i18n.get("workflow.add.interval_custom", "‚úçÔ∏è –í–≤–µ—Å—Ç–∏ —Å–≤–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª"), callback_data="interval:custom")
    
    kb.adjust(4)  # 4 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    return kb.as_markup()