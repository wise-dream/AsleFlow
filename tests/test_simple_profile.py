import pytest
from bot.handlers.basic.about import about_handler
from bot.keyboards.inline.settings import get_simple_settings_keyboard


@pytest.mark.asyncio
async def test_simple_profile_format():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    i18n = {
        "settings.language": "–Ø–∑—ã–∫",
        "settings.edit_name": "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è"
    }
    
    keyboard = get_simple_settings_keyboard(i18n)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ 2 –∫–Ω–æ–ø–∫–∏
    assert len(keyboard.inline_keyboard) == 2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ —è–∑—ã–∫–∞
    assert "üåê –Ø–∑—ã–∫" in keyboard.inline_keyboard[0][0].text
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏
    assert "‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è" in keyboard.inline_keyboard[1][0].text


@pytest.mark.asyncio
async def test_profile_text_structure():
    """–¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è"""
    # –°–∏–º—É–ª–∏—Ä—É–µ–º i18n —Å–ª–æ–≤–∞—Ä—å
    i18n = {
        "about.unknown": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
        "about.no_subscription": "–ù–µ—Ç",
        "about.get_in_settings": "–ü–æ–ª—É—á–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö",
        "about.tasks": "–∑–∞–¥–∞—á",
        "about.active": "–∞–∫—Ç–∏–≤–Ω—ã–µ",
        "about.no_tasks": "0 –∑–∞–¥–∞—á",
        "about.posts": "–ø–æ—Å—Ç–æ–≤",
        "about.published": "–æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ",
        "about.no_posts": "0 –ø–æ—Å—Ç–æ–≤",
        "about.connected_accounts": "–ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
        "about.no_accounts": "0 –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤",
        "about.free_posts_used": "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤"
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∫–ª—é—á–∏ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
    required_keys = [
        "about.no_subscription",
        "about.get_in_settings",
        "about.tasks",
        "about.active",
        "about.no_tasks",
        "about.posts",
        "about.published",
        "about.no_posts",
        "about.connected_accounts",
        "about.no_accounts",
        "about.free_posts_used"
    ]
    
    for key in required_keys:
        assert key in i18n, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏: {key}"


@pytest.mark.asyncio
async def test_none_values_handling():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ None –∑–Ω–∞—á–µ–Ω–∏–π –≤ –ø—Ä–æ—Ñ–∏–ª–µ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ None –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
    free_posts_used = None
    free_posts_limit = None
    cash = None
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É None –∑–Ω–∞—á–µ–Ω–∏–π
    free_posts_used = free_posts_used or 0
    free_posts_limit = free_posts_limit or 5
    cash = cash or 0
    
    assert free_posts_used == 0
    assert free_posts_limit == 5
    assert cash == 0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    assert free_posts_used > 0 == False
    assert free_posts_used == 0 == True


if __name__ == "__main__":
    print("‚úÖ –¢–µ—Å—Ç—ã —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!") 